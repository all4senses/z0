<?php // $Id: nice_tax_menu.module,v 1.1.2.1 2009/03/01 07:20:55 jenlampton Exp $

/**
 * Implemention of hook_menu().
 */
function nice_tax_menu_menu($may_cache) {
  if (!$may_cache) {
    // Add JavaScript, if enabled.
    if (variable_get('nice_tax_menu_ie', 1) == 1) {
      drupal_add_js(drupal_get_path('module', 'nice_tax_menu') .'/nice_tax_menu.js');
    }

    // Add main CSS functionality.
    drupal_add_css(drupal_get_path('module', 'nice_tax_menu') .'/nice_tax_menu.css');
    // Add custom CSS layout if specified.
    if ($custom = variable_get('nice_tax_menu_custom_css', '')) {
      drupal_add_css($custom);
    }
    // Fall back to default layout.
    else {
      drupal_add_css(drupal_get_path('module', 'nice_tax_menu') .'/nice_tax_menu_default.css');
    }
  }
  else {
    $items[] = array(
      'path' => 'admin/settings/nice_tax_menu',
      'title' => t('Taxonomy Drop-Down'),
      'description' => t('Configure Taxonomy Drop-Down Menus.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('nice_tax_menu_admin_settings'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    );
  }

  return $items;
}

/**
 * Settings form as implemented by hook_menu
 */
function nice_tax_menu_admin_settings() {
  $form['nice_tax_menu_number'] = array(
    '#type' => 'select',
    '#title' => t('Number of Taxonomy Drop-Down Menus'),
    '#description' => t('The total number of independent Taxonomy Drop-Down menus (blocks) you want.'),
    '#default_value' => variable_get('nice_tax_menu_number', '2'),
    '#options' => drupal_map_assoc(array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)),
  );
  $form['nice_tax_menu_ie'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable IE support'),
    '#description' => t('This will add necessary JavaScript for Taxonomy Drop-Down to work properly in Internet Explorer.'),
    '#default_value' => variable_get('nice_menus_ie', 1),
  );

  return system_settings_form($form);
}

function nice_tax_menu_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0] = array('info' => t('Taxonomy Drop-Down'),
      'weight' => 0, 'enabled' => 0);
    return $blocks;
  }
  else if ($op == 'configure' && $delta == 0) {
    $vocabs = taxonomy_get_vocabularies();
    $options = array();
    foreach ($vocabs as $vocab){
      $options[$vocab->vid] = $vocab->name;
    }
    $form['vocab'] = array(
      '#type' => 'select',
      '#title' => t('Drop-Down Vocabulary'),
      '#default_value' => variable_get('nice_tax_menu_vocab', 1),
      '#options' => $options,
    );
    $form['type'] = array(
      '#type' => 'select',
      '#title' => t('Drop-Down Type'),
      '#default_value' => variable_get('nice_tax_menu_type', 'right'),
      '#options' => array('left'=>'left','right'=>'right','down'=>'down'),
    );
    return $form;
  }
  else if ($op == 'save' && $delta == 0) {
    variable_set('nice_tax_menu_vocab', $edit['vocab']);
    variable_set('nice_tax_menu_type', $edit['type']);
  }
  else if ($op == 'view') {
    switch($delta) {
      case 0:
        $block = array('subject' => t('Taxonomy Drop-Down'),
          'content' => nice_tax_menu_block_content());
        break;
    }
    return $block;
  }
}


function nice_tax_menu_block_content(){
  $vid = variable_get('nice_tax_menu_vocab', 1);
  $items = nice_tax_menu_build_items($vid);
  $output = '<div id="ddmenu">';
  $output .= theme('nice_tax_menu', $items, array('class' => 'ddmenu'));
  $output .= '</div>';
  return $output;
}

function nice_tax_menu_build_items($vid){
  $tree = taxonomy_get_tree($vid);
  $items = array();

  // generate the menu items
  foreach ($tree as $term){
    if ($term->depth == 0) {
      $items[$term->tid] = array(
        'data' => l($term->name, 'taxonomy/term/'.$term->tid),
        'children' => nice_tax_menu_add_kids($term->tid, $vid),
      );
    }
  }
  
  return $items;
}

/* 
 * Recussively add child items
 */
function nice_tax_menu_add_kids($tid, $vid){
  //print_r($item);exit;
  // get children
  $kids = taxonomy_get_children($tid, $vid);
  foreach ($kids as $kid){
    //print_r($item['children']);exit;
    // add children to list
    $children[$kid->tid] = array(
        'data' => l($kid->name, 'taxonomy/term/'.$kid->tid),
        'children' => nice_tax_menu_add_kids($kid->tid, $vid),
    );    
  }
  return $children;
}

/*
 * theme functions 
 */
function theme_nice_tax_menu($items = array(), $attributes = array('class' => 'ddmenu')){
  if ($type = variable_get('nice_tax_menu_type', 'right')){
    $attributes['class'] .= ' ddmenu-' . $type;
  }
  $output = '';
  if (!empty($items)) {
    $output .= "<ul" . drupal_attributes($attributes) . '>';
    foreach ($items as $item) {
      $attributes = array();
      $children = array();
      if (is_array($item)) {
        foreach ($item as $key => $value) {
          if ($key == 'data') {
            $data = $value;
          }
          elseif ($key == 'children') {
            $children = $value;
          }
        }
      }
      else {
        $data = $item;
      }
      if (count($children) > 0) {
        $data .= theme('nice_tax_menu', $children, $attributes); // Render nested list
        $attributes['class'] .= ' menuparent';
      }
      $output .= '<li' . drupal_attributes($attributes) . '>'. $data .'</li>';
    }
    $output .= "</ul>";
  }
  return $output;
}